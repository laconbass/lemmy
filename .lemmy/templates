HELPMENU = "\
\n---------------------------------------------------------------------------------\
\n| LEMMY: 49% Motherfucker | 51% Son of a Bitch JS/CS Express+Mocha Boilerplate. |\
\n---------------------------------------------------------------------------------\
\n\nList of Commands you're able to use:\
\n\n-> setup [APP_LANGUAGE=CS]\tKick-start your JS/CS Express project for once and for all (JS is default).\
\n-> dependencies\t\t\tInstall locally all the dependencies defined on the package JSON file.\
\n-> clean\t\t\tClean-up all the generated code from your Express project.\
\n-> build\t\t\tCompiles your CS code into the JS equivalent.\
\n-> watch\t\t\tWatches any change on your CS code and automatically compiles it into its JS equivalent.\
\n-> run\t\t\t\tRun your project on Node.JS\
\n-> test\t\t\t\tTest your Express project using Mocha.\
\n-> deploy\t\t\tPrepares your Express project for deployment.\
\n-> mit-license\t\t\tGenerate a MIT license for your Express project.\
\n-> help\t\t\t\tDisplay the Help menu you're reading right now.\
\n"

GITIGNORE = ".DS_Store\
\nMakefile\
\n*.log\
\n.lemmy/\
\nnode_modules/\
\ndeploy/"

ifeq "$(APP_LANGUAGE)" "CS"
GITIGNORE += "\nlib/\
\nmodules/\
\ntest/"
endif

MODULAR_JS = "var express = require('express');\
\n\nvar app = express.createServer();\
\n\napp.configure(function(){\
\n\tapp.use(express.logger());\
\n\tapp.use(express.methodOverride());\
\n\tapp.use(express.bodyParser());\
\n\tapp.use(express.router);\
\n});\
\n\napp.configure('development', function(){\
\n\tapp.use(express.errorHandler({\
\n\t\tdumpExceptions: true,\
\n\t\tshowStack: true\
\n\t}));\
\n});\
\n\napp.configure('production', function(){\
\n\tapp.use(express.errorHandler());\
\n});\
\n\napp.listen(3000);"

MODULAR_CS = "express = require 'express'\
\n\napp = express.createServer()\
\n\napp.configure ->\
\n\tapp.use express.logger()\
\n\tapp.use express.methodOverride()\
\n\tapp.use express.bodyParser()\
\n\tapp.use express.router\
\n\treturn\
\n\napp.configure 'development', ->\
\n\tapp.use express.errorHandler(\
\n\t\tdumpExceptions: true,\
\n\t\tshowStack: true\
\n\t)\
\n\treturn\
\n\napp.configure 'production', ->\
\n\tapp.use express.errorHandler()\
\n\treturn\
\n\napp.listen 3000"

PACKAGE = '{\
\n\t"name": "$(APP_NAME)",\
\n\t"description": "Project description goes here...",\
\n\t"version": "0.0.1",\
\n\t"author": "$(APP_AUTHOR) <$(APP_EMAIL)>",\
\n\t"homepage": "$(APP_URL)",\
\n\t"keywords": [],\
\n\t"main": "./app.js",\
\n\t"engines": {\
\n\t\t"node": ">= 0.4.0 < 0.7.0"\
\n\t},\
\n\t"directories": {\
\n\t\t"lib": "./lib",\
\n\t\t"modules": "./modules",\
\n\t\t"node_modules": "./node_modules",\
\n\t\t"test": "./test"\
\n\t},\
\n\t"dependencies": {\
\n\t\t"express": "2.5.2"\
\n\t},\
\n\t"devDependencies": {\
\n\t\t"mocha": "0.5.0",\
\n\t\t"should": "0.4.1"'

ifeq "$(APP_LANGUAGE)" "CS"
PACKAGE += ',\
\n\t\t"jitter": "1.1.1"'
endif

PACKAGE += '\n\t},\
\n\t"repositories": [],\
\n\t"bugs": "http://bugs.example.com",\
\n\t"maintainers": [],\
\n\t"contributors": [],\
\n\t"licenses": []\
\n}'
